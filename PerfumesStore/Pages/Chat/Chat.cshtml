@page
@model PerfumesStore.Pages.Chat.ChatModel
@{
    ViewData["Title"] = "Chat";
}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
    }

    #chatContainer {
        width: 400px;
        background-color: #fff;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        overflow: hidden;
    }

    #chatWindow {
        height: 300px;
        overflow-y: auto;
        padding: 10px;
        border-bottom: 1px solid #ddd;
        background-color: #fafafa;
    }

    .message {
        margin-bottom: 10px;
    }

        .message .username {
            font-weight: bold;
            color: #333;
        }

        .message .timestamp {
            font-size: 0.8em;
            color: #aaa;
        }

        .message .text {
            margin: 5px 0;
        }

    #inputContainer {
        display: flex;
        flex-direction: column;
        padding: 10px;
    }

    input[type="text"] {
        padding: 10px;
        margin-bottom: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
        font-size: 1em;
        width: calc(100% - 22px);
    }

    button {
        padding: 10px;
        border: none;
        border-radius: 4px;
        background-color: #007bff;
        color: white;
        font-size: 1em;
        cursor: pointer;
    }

        button:hover {
            background-color: #0056b3;
        }

</style>

@await Html.PartialAsync("Partials/_HeaderPartial", Model)
<div id="chatContainer"  style="margin-top: 500px;">
    <div id="chatWindow"></div>
    <div id="inputContainer">
        <input type="text" id="userInput" placeholder="Enter your name..." />
        <input type="text" id="messageInput" placeholder="Enter your message..." />
        <button onclick="sendMessage()">Send</button>
    </div>
</div>
@await Html.PartialAsync("Partials/_FooterPartial", Model)


@section Scripts {
    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        connection.on("ReceiveMessage", (user, message, timestamp) => {
            const msg = `${timestamp} ${user}: ${message}`;
            const div = document.createElement("div");
            div.textContent = msg;
            document.getElementById("chatWindow").appendChild(div);
        });

        connection.start().catch(err => console.error(err.toString()));

        function sendMessage() {
            const user = document.getElementById("userInput").value;
            const message = document.getElementById("messageInput").value;
            connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
            // Clear the message input field
            document.getElementById("messageInput").value = "";
        }
    </script>
}